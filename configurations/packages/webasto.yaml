pack_webasto:
  shell_command:
    webasto_state: '/config/shell_scripts/get_parsehub.sh t2JPRLvvEm1r webasto.json'
    webasto_on: '/config/shell_scripts/get_parsehub.sh t2JPRLvvEm1r webasto.json command on'
    webasto_off: '/config/shell_scripts/get_parsehub.sh t2JPRLvvEm1r webasto.json command off'

  sensor:
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto Battery
      value_template: '{{ value_json.voltage }}'
      unit_of_measurement: "V"
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto Temperature
      value_template: '{{ value_json.temperature }}'
      unit_of_measurement: "Â°C"
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto State
      value_template: '{{ value_json.state }}'
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto Last Update
      value_template: '{{ value_json.last_update }}'

  homeassistant:
    customize:
      sensor.webasto_battery:
        icon: mdi:car-battery
      sensor.webasto_temperature:
        icon: mdi:thermometer
      sensor.webasto_state:
        icon: mdi:state-machine

  switch:
    - platform: template
      switches:
        webasto:
          friendly_name: Webasto
          value_template: "{{ is_state('sensor.webasto_state', 'on') }}"
          icon_template: >-
            {% if is_state('sensor.webasto_state', 'on') %}
              mdi:radiator
            {% else %}
              mdi:radiator-disabled
            {% endif %}
          turn_on:
            service: shell_command.webasto_on
          turn_off:
            service: shell_command.webasto_off
