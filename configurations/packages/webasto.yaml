###########################################
#                                         #
#   ! ! ! ONLY FOR ADVANCED USERS ! ! !   #
#   -----------------------------------   #
#                                         #
# Webasto Package for reading state and   #
# controlling on/off thru ParseHub        #
# Please note that this is an UNSUPPORTED #
# solution, and use at your own risk!     #
#                                         #
# REQUIRES Parsehub project Webasto.phj   #
# imported into your Parsehub             #
#                                         #
# Replace t2JPRLvvEm1r with your Project  #
# token (found in Parsehub app)           #
#                                         #
# Create path /config/rest_json           #
#                                         #
# Create path /config/shell_scripts       #
# Copy get_parsehub.sh to this path       #
# chmod 755 get_parsehub.sh               #
#                                         #
# Create file                             #
# /config/shell_scripts/shell_secrets.txt #
# Add these variables to the file:        #
# PARSEHUB_API_TOKEN=TokenFromApp         #
#                                         #
# Rev. 1, 15/11-2021 by Morten Trab       #
#                                         #
###########################################

pack_webasto:
  automation:
    alias: Auto - Update Webasto State
    description: Triggers update thru Parsehub
    trigger:
      - platform: time_pattern
        minutes: /5
    condition: []
    action:
      - service: shell_command.webasto_state
    mode: single

  shell_command:
    webasto_state: '/config/shell_scripts/get_parsehub.sh t2JPRLvvEm1r webasto.json'
    webasto_on: '/config/shell_scripts/get_parsehub.sh t2JPRLvvEm1r webasto.json command on'
    webasto_off: '/config/shell_scripts/get_parsehub.sh t2JPRLvvEm1r webasto.json command off'

  sensor:
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto Battery
      value_template: '{{ value_json.voltage }}'
      unit_of_measurement: "V"
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto Temperature
      value_template: '{{ value_json.temperature }}'
      unit_of_measurement: "Â°C"
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto State
      value_template: '{{ value_json.state }}'
    - platform: file
      file_path: /config/rest_json/webasto.json
      name: Webasto Last Update
      value_template: >-
        {{ strptime(value_json.last_update.replace(' GMT',''), '%a %b %d %Y %H:%M:%S%z (%Z)').timestamp() | timestamp_custom('%H:%M %d-%m-%Y') }}

  homeassistant:
    customize:
      sensor.webasto_battery:
        icon: mdi:car-battery
      sensor.webasto_temperature:
        icon: mdi:thermometer
      sensor.webasto_state:
        icon: mdi:state-machine

  switch:
    - platform: template
      switches:
        webasto:
          friendly_name: Webasto
          value_template: "{{ is_state('sensor.webasto_state', 'on') }}"
          icon_template: >-
            {% if is_state('sensor.webasto_state', 'on') %}
              mdi:radiator
            {% else %}
              mdi:radiator-disabled
            {% endif %}
          turn_on:
            service: shell_command.webasto_on
          turn_off:
            service: shell_command.webasto_off
