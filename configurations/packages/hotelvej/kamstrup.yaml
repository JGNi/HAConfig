##########################
# AMS Reader MQTT topics #
##########################

pack_kamstrup:
  # automation:
  #   - alias: Auto - Update Meter Sensor
  #     id: utilitymetersupdate
  #     trigger:
  #       - platform: state
  #         entity_id: sensor.kamstrup_meter_reading
  #         to:
  #       - platform: homeassistant
  #         event: start
  #       - platform: state
  #         entity_id: sensor.kamstrup_meter_reading_without_sensors
  #         to: '0'
  #     condition:
  #       - condition: template
  #         value_template: >-
  #           {{ (states.sensor.kamstrup_meter_reading.state | float(0)) > 0 and
  #           (states.sensor.utility_meters_total.state | float(0)) > 0 }}
  #     action:
  #       - service: python_script.set_state
  #         data_template:
  #           entity_id: sensor.kamstrup_meter_reading_without_sensors
  #           state: '{{ ((states.sensor.kamstrup_meter_reading.state | float(0)) - (states.sensor.utility_meters_total.state | float(0)) | round(2)) }}'
  #     mode: single
  mqtt:
    sensor:
      - name: Kamstrup RSSI
        state_topic: "kamstrup/rssi"
        device_class: signal_strength
        unit_of_measurement: dBm
        unique_id: amsrssi
      - name: Kamstrup Import
        state_topic: "kamstrup/meter/import/active"
        state_class: measurement
        device_class: power
        unit_of_measurement: W
        unique_id: amsimport
      - name: Kamstrup Meter Reading
        state_topic: "kamstrup/meter/import/active/accumulated"
        state_class: total_increasing
        device_class: energy
        unit_of_measurement: kWh
        unique_id: amsimportaccumulated
      - name: Kamstrup L1 PowerFactor
        state_topic: "kamstrup/meter/l1/powerfactor"
        device_class: power_factor
        unit_of_measurement: "%"
        unique_id: amsl1powerfactor
      - name: Kamstrup L1 Current
        state_topic: "kamstrup/meter/l1/current"
        device_class: current
        unit_of_measurement: A
        unique_id: amsl1current
      - name: Kamstrup L1 Voltage
        state_topic: "kamstrup/meter/l1/voltage"
        device_class: voltage
        unit_of_measurement: V
        unique_id: amsl1voltage
      - name: Kamstrup L2 PowerFactor
        state_topic: "kamstrup/meter/l2/powerfactor"
        device_class: power_factor
        unit_of_measurement: "%"
        unique_id: amsl2powerfactor
      - name: Kamstrup L2 Current
        state_topic: "kamstrup/meter/l2/current"
        device_class: current
        unit_of_measurement: A
        unique_id: amsl2current
      - name: Kamstrup L2 Voltage
        state_topic: "kamstrup/meter/l2/voltage"
        device_class: voltage
        unit_of_measurement: V
        unique_id: amsl2voltage
      - name: Kamstrup L3 PowerFactor
        state_topic: "kamstrup/meter/l3/powerfactor"
        device_class: power_factor
        unit_of_measurement: "%"
        unique_id: amsl3powerfactor
      - name: Kamstrup L3 Current
        state_topic: "kamstrup/meter/l3/current"
        device_class: current
        unit_of_measurement: A
        unique_id: amsl3current
      - name: Kamstrup L3 Voltage
        state_topic: "kamstrup/meter/l3/voltage"
        device_class: voltage
        unit_of_measurement: V
        unique_id: amsl3voltage

  # Subtract cost-tracked entities from the total meter reading
  template:
    - sensor:
        - name: "Utility Meters Total"
          device_class: energy
          state_class: total_increasing
          unit_of_measurement: kWh
          state: >
            {% set ns = namespace(sensors=[],ok_sensors=(states.sensor | rejectattr('state','in',['unavailable','unknown','none']) | list)) %}
            {%- for sensor in ns.ok_sensors %}
              {%- if "utility_meter_" in sensor.entity_id and "_cost" not in sensor.entity_id %}
                {% set ns.sensors = ns.sensors + [sensor] %}
              {%- endif %}
            {%- endfor %}

            {{ ns.sensors | map(attribute='state') | map('float') | sum() | round(2) }}
        - name: "Kamstrup Meter Reading Without Sensors"
          device_class: energy
          state_class: total_increasing
          unit_of_measurement: kWh
          state: >
            {% set ns = namespace(sensors=[],ok_sensors=(states.sensor | rejectattr('state','in',['unavailable','unknown','none']) | list)) %}
            {%- for sensor in ns.ok_sensors %}
              {%- if "utility_meter_" in sensor.entity_id and "_cost" not in sensor.entity_id %}
                {% set ns.sensors = ns.sensors + [sensor] %}
              {%- endif %}
            {%- endfor %}

            {% set master = (states('sensor.kamstrup_meter_reading') | float(0)) %}
            {% set old_state = (states('sensor.kamstrup_meter_reading_without_sensors') | float(0)) %}
            {% set new_state = (master - (ns.sensors | map(attribute='state') | map('float') | sum()) | round(2)) %}

            {% if (new_state | float(0)) > (old_state | float(0)) and is_number(new_state) %}
              {{ ((new_state | float(0)) | round(2)) }}
            {% else %}
              {{ old_state }}
            {% endif %}

  homeassistant:
    customize:
      sensor.kamstrup_meter_reading_without_sensors:
        friendly_name: "Kamstrup Meter Reading"
