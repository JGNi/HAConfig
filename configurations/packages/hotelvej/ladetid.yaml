################################
# Calculate cheapest timeframe #
# for charging the car (PHEV)  #
################################

pack_ladetid:
  template:
    - trigger:
        - platform: time_pattern
          minutes: 0
        - platform: state
          entity_id:
            - input_number.car_charge_time
            - input_datetime.car_departure_time
        - platform: homeassistant
          event: start
      binary_sensor:
        - name: "Billigste opladningspris"
          state: >
            {%- set charging_time = states("input_number.car_charge_time") | int %}
            {%- set departure_time = state_attr("input_datetime.car_departure_time", "hour") | int -%}
            {% set current_hour = now().hour %}

            {% set departure_time = departure_time + 24 if departure_time <= current_hour else departure_time %}

            {% set ns = namespace(prices = []) %}
            {% set prices = state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") | list + state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow") | list if state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow_valid") else state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") %}

            {% set start_index = current_hour | int %}
            {% set end_index = ([departure_time, prices | length] | min - charging_time) | int + 1  %}

            {% for index in range(start_index, end_index) -%}
              {%- set price = prices[index] -%}
                {%- set ns.current_total = 0 -%}
                {%- for i in range(index, index + charging_time) -%} {# loop every hour in charge time#}
                  {%- set ns.current_total = ns.current_total + prices[i] | float(0) -%}
                {%-endfor -%}

              {% set ns.prices = ns.prices + [ns.current_total] -%}
            {% endfor %}

            {% if ns.prices | count == 0 or ns.prices[0] > ns.prices | min %}False{% else %}True{% endif %}
          attributes:
            billigst: >
              {%- set charging_time = states("input_number.car_charge_time") | int %}
              {%- set departure_time = state_attr("input_datetime.car_departure_time", "hour") | int -%}
              {% set current_hour = now().hour %}

              {% set departure_time = departure_time + 24 if departure_time <= current_hour else departure_time %}

              {% set ns = namespace(prices = []) %}
              {% set prices = state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") | list + state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow") | list if state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow_valid") else state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") %}

              {% set start_index = current_hour | int %}
              {% set end_index = ([departure_time, prices | length] | min - charging_time) | int + 1  %}

              {% for index in range(start_index, end_index) -%}
                {%- set price = prices[index] -%}
                  {%- set ns.current_total = 0 -%}
                  {%- for i in range(index, index + charging_time) -%} {# loop every hour in charge time#}
                    {%- set ns.current_total = ns.current_total + prices[i] | float(0) -%}
                  {%-endfor -%}

                {% set ns.prices = ns.prices + [ns.current_total] -%}
              {% endfor %}

              {% if ns.prices | length  > 0 %}
                kl {{'{:0>2}'.format((ns.prices.index(ns.prices | min) + start_index) % 24)}},  {{ "%.2f"|format(ns.prices | min) }}kr
              {% else %}
                Ikke mulig
              {% endif %}
            dyrest: >
              {%- set charging_time = states("input_number.car_charge_time") | int %}
              {%- set departure_time = state_attr("input_datetime.car_departure_time", "hour") | int -%}
              {% set current_hour = now().hour %}

              {% set departure_time = departure_time + 24 if departure_time <= current_hour else departure_time %}

              {% set ns = namespace(prices = []) %}
              {% set prices = state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") | list + state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow") | list if state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow_valid") else state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") %}

              {% set start_index = current_hour | int %}
              {% set end_index = ([departure_time, prices | length] | min - charging_time) | int + 1  %}

              {% for index in range(start_index, end_index) -%}
                {%- set price = prices[index] -%}
                  {%- set ns.current_total = 0 -%}
                  {%- for i in range(index, index + charging_time) -%} {# loop every hour in charge time#}
                    {%- set ns.current_total = ns.current_total + prices[i] | float(0) -%}
                  {%-endfor -%}

                {% set ns.prices = ns.prices + [ns.current_total] -%}
              {% endfor %}

              {% if ns.prices | length  > 0 %}
                kl {{'{:0>2}'.format((ns.prices.index(ns.prices | max) + start_index) % 24)}},  {{ "%.2f"|format(ns.prices | max) }}kr
              {% else %}
                Ikke mulig
              {% endif %}
            nuværende: >
              {%- set charging_time = states("input_number.car_charge_time") | int %}
              {%- set departure_time = state_attr("input_datetime.car_departure_time", "hour") | int -%}
              {% set current_hour = now().hour %}

              {% set departure_time = departure_time + 24 if departure_time <= current_hour else departure_time %}

              {% set ns = namespace(prices = []) %}
              {% set prices = state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") | list + state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow") | list if state_attr("sensor.energi_data_service_west_of_the_great_belt", "tomorrow_valid") else state_attr("sensor.energi_data_service_west_of_the_great_belt", "today") %}

              {% set start_index = current_hour | int %}
              {% set end_index = start_index + charging_time | int + 1  %}

              {% for index in range(start_index, end_index) -%}
                {%- set price = prices[index] -%}
                  {%- set ns.current_total = 0 -%}
                  {%- for i in range(index, index + charging_time) -%} {# loop every hour in charge time#}
                    {%- set ns.current_total = ns.current_total + prices[i] | float(0) -%}
                  {%-endfor -%}

                {% set ns.prices = ns.prices + [ns.current_total] -%}
              {% endfor %}

              {% if ns.prices | length  > 0 %}
                {{ "%.2f"|format(ns.prices[0]) }}kr
              {% endif %}
    - sensor:
        - name: charge_price_low
          state: >
            {{ state_attr("binary_sensor.billigste_opladningspris", "billigst") }}
    - sensor:
        - name: charge_price_high
          state: >
            {{ state_attr("binary_sensor.billigste_opladningspris", "dyrest") }}
    - sensor:
        - name: charge_price_current
          device_class: monetary
          unit_of_measurement: "kr"
          state: >
            {{ state_attr("binary_sensor.billigste_opladningspris", "nuværende") | replace("kr", "") }}

  input_boolean:
    allow_auto_charge:
      name: Styring af opladning
      icon: mdi:ev-station
    charge_time_override:
      name: Start varmer ved manuel tidspunkt
      icon: mdi:clock-alert
      initial: false

  automation:
    - alias: Auto - Kia Niro - Charge when cheapest
      id: niroChargeCheap
      trigger:
        - platform: state
          entity_id: binary_sensor.billigste_opladningspris
          from: "off"
          to: "on"
          id: "on"
      condition:
        - alias: "Only if automation is allowed"
          condition: state
          entity_id: input_boolean.allow_auto_charge
          state: "on"
      action:
        - service: switch.turn_on
          target:
            entity_id: switch.extensioncord
      mode: single

    - alias: Auto - Kia Niro - Switch off charger when done
      id: niroChargeStop
      trigger:
        - platform: state
          entity_id: switch.extensioncord
          from: "off"
          to: "on"
          id: "on"
          for: 00:10:00
      condition: []
      action:
        - wait_template: '{{ (states("sensor.extensioncord_active_power") | float(0)) < 5 }}'
        - service: switch.turn_off
          target:
            entity_id: switch.extensioncord
      mode: single

    - alias: Auto - Kia Niro - Charge Time Override
      description: "Allow manual start time override"
      id: niroChargeOverride
      trigger:
        - platform: state
          entity_id: binary_sensor.workday_sensor
          id: workday_on
          from: "off"
          to: "on"
        - platform: state
          entity_id: binary_sensor.workday_sensor
          id: workday_off
          from: "on"
          to: "off"
        - platform: state
          entity_id: input_datetime.car_departure_time
          id: time_set
      condition: []
      action:
        - choose:
            - conditions:
                - condition: or
                  conditions:
                    - condition: trigger
                      id: workday_on
                    - condition: trigger
                      id: time_set
              sequence:
                - service: input_boolean.turn_on
                  target:
                    entity_id: input_boolean.charge_time_override
            - conditions:
                - condition: trigger
                  id: workday_off
              sequence:
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.charge_time_override
          default: []
      mode: restart

  utility_meter:
    car_charge_usage:
      source: sensor.extensioncord_energy
      cycle: daily
