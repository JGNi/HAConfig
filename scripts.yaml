bedroom_enable_sleep_timer:
  alias: Enable Sleep Timer in Bedroom
  sequence:
  - service: media_player.volume_set
    data:
      volume_level: 0.05
    target:
      entity_id: media_player.sovevaerelse_2
  - service: media_player.play_media
    data:
      media_content_id: http://live-icy.dr.dk/A/A14H.mp3.m3u
      media_content_type: music
    entity_id: media_player.sovevaerelse_2
  - service: sonos.set_sleep_timer
    data:
      sleep_time: 7200
      entity_id: media_player.sovevaerelse_2
  mode: single
dimmer_brighten_light:
  alias: Dimmer - Brighten Light
  sequence:
  - repeat:
      while:
      - condition: template
        value_template: '{{ is_state(entity, ''on'') and state_attr(entity, ''brightness'')
          < target_brightness | default(255) }}'
      sequence:
      - service: light.turn_on
        data_template:
          brightness_step: 30
          transition: 1
          entity_id: '{{ entity }}'
      - delay: 00:00:01
  mode: parallel
  max: 10
dimmer_dim_light:
  alias: Dimmer - Dim Light
  sequence:
  - repeat:
      while:
      - condition: template
        value_template: '{{ is_state(entity, ''on'') and state_attr(entity, ''brightness'')
          > target_brightness | default(20) }}'
      sequence:
      - service: light.turn_on
        data_template:
          brightness_step: -30
          transition: 1
          entity_id: '{{ entity }}'
      - delay:
          seconds: 1
  mode: single
godnat_tts:
  alias: Godnat TTS
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: person.pia
        state: home
      sequence:
      - service: tts.cloud_say
        data:
          message: Godnat Morten og godnat Pia, kan i sove godt
          entity_id: media_player.sovevaerelse
    default:
    - service: tts.cloud_say
      data:
        entity_id: media_player.sovevaerelse
        message: Godnat Morten, kan du sove godt
  mode: single
turn_on_webasto:
  alias: Turn on Webasto
  sequence:
  - condition: template
    value_template: '{{ states(''sensor.webasto_temperature'') < states(''input_number.webasto_low_point'')
      }}'
  - condition: state
    entity_id: input_boolean.is_home
    state: 'off'
  - condition: state
    entity_id: switch.webasto
    state: 'off'
  - service: shell_command.webasto_on
  mode: single
  icon: mdi:radiator
